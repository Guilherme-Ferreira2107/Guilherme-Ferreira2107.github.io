{"version":3,"sources":["componente/TabelaCalculos.js","redux/actions/CalculosActions.js","componente/Conteudo.js","componente/Header.js","componente/Footer.js","componente/App.js","redux/reducers/CalculosReducers.js","redux/reducers/index.js","serviceWorker.js","index.js"],"names":["TabelaCalculos","props","state","stoploss","payout","QtdaMartingale","ordem","ordem2","ordem3","ordem4","ordem5","retorno","retorno2","retorno3","retorno4","retorno5","noReload","bind","calcular","zerar","e","preventDefault","this","setState","window","location","reload","value","onSubmit","type","onChange","target","onClick","class","React","Component","connect","CalculosReducers","banca","modificaBanca","payload","Conteudo","Header","Footer","App","INITIAL_STATE","resultado","action","combineReducers","Boolean","hostname","match","ReactDOM","render","store","createStore","reducers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2101e48.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n// eslint-disable-next-line\r\nimport style from '../css/style.css';\r\nimport {connect} from 'react-redux';\r\nimport { modificaBanca } from '../redux/actions';\r\n\r\n\r\nclass TabelaCalculos extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            stoploss:10,\r\n            payout:90,\r\n            QtdaMartingale:0,\r\n            ordem: null,\r\n            ordem2:null,\r\n            ordem3:null,\r\n            ordem4:null,\r\n            ordem5:null,\r\n            retorno:null,\r\n            retorno2:null,\r\n            retorno3:null,\r\n            retorno4:null,\r\n            retorno5:null,\r\n        }\r\n\r\n        this.noReload = this.noReload.bind(this);\r\n        this.calcular = this.calcular.bind(this);\r\n        this.zerar = this.zerar.bind(this);\r\n    }\r\n\r\n    noReload(e){\r\n        e.preventDefault(this)\r\n    }\r\n\r\n    async calcular(){\r\n         this.setState({\r\n            ordem: this.props.stoploss,\r\n            retorno: this.state.ordem * (this.state.payout / 100),\r\n        })\r\n    }\r\n\r\n    zerar(){\r\n        window.location.reload(false);\r\n    }\r\n    \r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n\r\n                <select>\r\n                    <option value=\"soros\">Soros</option>\r\n                    <option value=\"Martingale\">Martingale</option>\r\n                    <option value=\"SorosGale\">SorosGale</option>\r\n                </select>\r\n                \r\n                <form onSubmit={this.noReload}> \r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <h3>Informe o valor de sua ordem:</h3>\r\n                                <input \r\n                                    value={this.state.stoploss } \r\n                                    type=\"number\" \r\n                                    onChange={(e) => {this.setState({stoploss:e.target.value})} } />\r\n                                <h4> Ordem: R${this.state.stoploss } </h4>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                <h3>Informe o valor do payout:</h3>\r\n                                <input \r\n                                    value={this.state.payout }\r\n                                    type=\"number\" \r\n                                    onChange={(e) => {this.setState({payout:e.target.value})} } />\r\n                                <h4> Payout: {this.state.payout }% </h4>                            \r\n                            </td>\r\n                            <td>\r\n                                <h3>Informe quantidade de martingales:</h3>                           \r\n                                <select value={this.state.value} onChange={(e) => {this.setState({QtdaMartingale:e.target.value}) }} >\r\n                                    <option value=\"0\">0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                                <h4> Martingales:  { this.state.QtdaMartingale ? this.state.QtdaMartingale : 0 } </h4>\r\n                            </td>                       \r\n                        </tr>\r\n                    </table>\r\n\r\n                    <button type=\"button\" onClick={this.calcular} >Calcular entradas</button>\r\n\r\n                    \r\n\r\n                    <h3>Resultado:  </h3>\r\n\r\n                    <table class=\"tableResultado\">\r\n                        <tr>\r\n                            <td>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                1° Ordem\r\n                            </td>\r\n                            <td>\r\n                                Retorno\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                1° Nível\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.ordem }\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.retorno }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                2° Nível\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.ordem2 }\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.retorno2 }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                3° Nível\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.ordem3 }\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.retorno3 }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                4° Nível\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.ordem4 }\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.retorno4 }\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                5° Nível\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.ordem5 }\r\n                            </td>\r\n                            <td>\r\n                                R${ this.state.retorno5 }\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <button type=\"button\" onClick={this.zerar} >Zerar</button>\r\n\r\n                </form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        stoploss: state.CalculosReducers.banca\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps, {\r\n    modificaBanca\r\n})(TabelaCalculos); ","export const modificaBanca = (banca) => {\r\n    return{\r\n        type:'MODIFICA_BANCA',\r\n        payload: banca\r\n    }\r\n}","import React from 'react';\r\n// eslint-disable-next-line\r\nimport style from '../css/style.css';\r\nimport TabelaCalculos from './TabelaCalculos';\r\n\r\nconst Conteudo = () => {\r\n    return(\r\n        <div class=\"conteudo\">\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <TabelaCalculos />\r\n                    </td>\r\n                </tr>\r\n            </table>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Conteudo;","import React from 'react';\r\n// eslint-disable-next-line\r\nimport style from '../css/style.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div class=\"header\">\r\n            <h1>Calculadora Para Opções Binárias</h1>\r\n            <hr  />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n// eslint-disable-next-line\r\nimport style from '../css/style.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div class=\"footer\">\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <hr  />\r\n                        <h1>Acesse nossos links</h1>\r\n                    </td>\r\n                </tr>\r\n            </table> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Conteudo from './Conteudo';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n// eslint-disable-next-line\r\nimport style from '../css/style.css'; \r\n\r\nexport default class App extends React.Component {\r\n    render(){\r\n        return (\r\n            <div class=\"base\">\r\n                <table>\r\n                    <tr>\r\n                        <td>\r\n                            <Header />\r\n                            \r\n                            <Conteudo />\r\n                            \r\n                            <Footer />\r\n                        </td>\r\n                    </tr>\r\n                </table>                \r\n            </div>\r\n        );\r\n    }\r\n}","\r\nconst INITIAL_STATE = {\r\n    banca: '100',\r\n    resultado: '5'\r\n}\r\n\r\nconst CalculosReducers = (state = INITIAL_STATE, action) => {\r\n    if(action.type === 'MODIFICA_BANCA'){\r\n        return {\r\n            ...state,\r\n            banca: action.payload\r\n        }\r\n    }\r\n    return state;\r\n}\r\n \r\nexport default CalculosReducers;","import  { combineReducers } from 'redux';\r\nimport CalculosReducers from './CalculosReducers';\r\n\r\n\r\nexport default combineReducers({\r\n    CalculosReducers: CalculosReducers,\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componente/App';\nimport reducers from './redux/reducers';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}